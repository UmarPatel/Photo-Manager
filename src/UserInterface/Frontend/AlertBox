package UserInterface;//

import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.VBox;
import javafx.stage.Modality;
import javafx.stage.Stage;

import java.util.ArrayList;
import java.util.Iterator;

public class AlertBox {

    public AlertBox() {
    }

    /**
     * Adapted from https://github.com/buckyroberts/Source-Code-from-Tutorials/tree/master/JavaFX. Retrieved Nov. 10
     * Displays a window to the user with the error message
     * @param title The title of the new window
     * @param message The message to be displayed to the user
     */
    public static void displayText(String title, String message) {
        Stage window = new Stage();
        window.initModality(Modality.APPLICATION_MODAL);
        window.setTitle(title);
        window.setMinWidth(300);
        window.setMinHeight(300);
        Label label = new Label();
        label.setText(message);
        VBox layout = new VBox(10.0D);
        layout.getChildren().addAll(new Node[]{label});
        layout.setAlignment(Pos.CENTER);
        Scene scene = new Scene(layout);
        window.setScene(scene);
        window.showAndWait();
    }

    /**
     * Displays the logs of renaming ImageFiles done in the program in a new window
     * @param title The title of the window
     * @param logs The list of all renaming of every ImageFile
     */
    static void display(String title, ArrayList<String> logs) {
        Stage window = new Stage();
        window.initModality(Modality.APPLICATION_MODAL);
        window.setTitle(title);
        window.setMinWidth(300.0D);
        window.setMinHeight(300.0D);
        Label label = new Label();
        String message = "";

        String tag;
        for (int i = 0; i < logs.size(); i++){
            message = message + "Version"+ i + ": " + logs.get(i) + ", ";
        }

        label.setText(message);
        VBox layout = new VBox(10.0D);
        layout.getChildren().addAll(new Node[]{label});
        layout.setAlignment(Pos.CENTER);
        Scene scene = new Scene(layout);
        window.setScene(scene);
        window.showAndWait();
    }

    /**
     * Displays the list of all tags in all instanes of the program in a new window
     * @param title The title of the window
     * @param tags The tags to be displayed
     */
    public static void displayTags(String title, ArrayList<String> tags) {
        Stage window = new Stage();
        window.initModality(Modality.APPLICATION_MODAL);
        window.setTitle(title);
        window.setMinWidth(300.0D);
        window.setMinHeight(300.0D);
        Label label = new Label();
        String message = "";

        String tag;
        for (int i = 0; i < tags.size(); i++){
            message = message + tags.get(i) + ", ";
        }

        message = message.substring(0, message.length()-2);

        label.setText(message);
        VBox layout = new VBox(10.0D);
        layout.getChildren().addAll(new Node[]{label});
        layout.setAlignment(Pos.CENTER);
        Scene scene = new Scene(layout);
        window.setScene(scene);
        window.showAndWait();
    }

    public static void displayLog(String title, ArrayList<ArrayList<String>> tags) {
        Stage window = new Stage();
        window.initModality(Modality.APPLICATION_MODAL);
        window.setTitle(title);
        window.setMinWidth(300.0D);
        window.setMinHeight(300.0D);


        Label label = new Label();
        VBox layout = new VBox(10.0D);
        String tag;
        for (ArrayList<String> curr_arr : tags) {
            label = new Label();
            String message = "";
            for (String curr_str : curr_arr) {
                message = message + curr_str + " ";
            }
            label.setText(message);
            layout.getChildren().addAll(new Node[]{label});
        }

        layout.setAlignment(Pos.CENTER);
        Scene scene = new Scene(layout);
        window.setScene(scene);
        window.showAndWait();
    }
}
